AWSTemplateFormatVersion: "2010-09-09"

Description: >
  Create EKS Control Plane

Parameters:
  EnvName:
    Description: Environment where cluster will be created
    Type: String
    Default: ProdEnv

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "EKS settings"
        Parameters:
          - EnvName

Resources:
  AWSServiceRoleForAmazonEKS:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - eks.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy

  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: "prod"
      Version: "1.10"
      RoleArn: !GetAtt AWSServiceRoleForAmazonEKS.Arn
      ResourcesVpcConfig:
        SecurityGroupIds: 
          - Fn::ImportValue: !Sub '${EnvName}-SecurityGroups'
        SubnetIds: !Split [",", !ImportValue 'ProdEnv-SubnetIds']

Outputs:
  RoleArn:
    Description: The role that EKS will use to create AWS resources for Kubernetes clusters
    Value: !GetAtt AWSServiceRoleForAmazonEKS.Arn
    Export:
      Name: !Sub "${AWS::StackName}-RoleArn"
  EKSArn:
    Description: My EKS Cluster Arn
    Value: !GetAtt EKSCluster.Arn
    Export:
      Name: !Sub "${AWS::StackName}-EKSCluster-Arn"
  EKSEndpoint:
    Description: My EKS Cluster EntryPoint
    Value: !GetAtt EKSCluster.Endpoint
    Export:
      Name: !Sub "${AWS::StackName}-EKSCluster-Endpoint"
